plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.alphaka'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    // *** Spring Boot Starters***
    implementation 'org.springframework.boot:spring-boot-starter-web' // Web
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // JDBC

    // *** Spring Cloud ***
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // Eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // Feign

    // *** Spring Doc ***
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15' // OpenAPI

    // *** 데이터베이스 및 캐시 ***
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL Connector
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis

    // *** SQL 로그 ***
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' // P6SPY

    // *** Lombok ***
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // *** 개발 도구 ***
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // *** 테스트 ***
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // *** QueryDSL ***
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //스프링 클라우드 쿠버네티스
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.1.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes:1.1.10.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-loadbalancer:3.1.3'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
